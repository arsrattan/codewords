{"version":3,"sources":["components/tile/index.js","components/board/index.js","components/loadingInfo/index.js","components/scoreboard/scoreboard.js","components/idInput/index.js","components/dropdownMenu/dropdownMenu.js","components/appBar/index.js","services/wordsClient.js","services/gameLoader.js","components/game/index.js","components/listModal/index.js","App.js","serviceWorker.js","index.js","components/board/board.module.css","components/loadingInfo/loadingInfo.module.css","components/tile/tile.module.css"],"names":["React","memo","props","useState","spymasterMode","trueColor","styleDefinitions","neutralCardColor","colorShown","setColorShown","getColorToDisplay","colorRotation","endgameCardColor","push","greenCardColor","indexOf","length","useEffect","className","styles","tileContainer","tile","style","backgroundColor","onClick","newColor","trackTileClicked","handleTileClick","word","prevProps","newProps","console","log","tiles","renderTile","index","tileClicked","tileIndexCounter","board","boardTiles","tileRow","loadingInfo","introText","headingText","CircularProgress","id","appLoadingSpinner","size","spinnerSize","useStyles","makeStyles","theme","root","display","margin","spacing","fontWeight","ScoreBoard","classes","Avatar","colorTeamA","tilesRemainingTeamA","colorTeamB","tilesRemainingTeamB","search","position","borderRadius","shape","fade","palette","common","white","marginRight","marginLeft","width","breakpoints","up","inputRoot","color","inputInput","padding","paddingLeft","transition","transitions","create","InputBase","placeholder","input","inputProps","onChange","e","target","value","test","IdChanged","toLowerCase","buttonProps","primary","anchorEl","setAnchorEl","options","selectedOption","selectedIndex","setSelectedIndex","handleClickMenuItem","optionSelected","menuItems","map","name","MenuItem","key","disabled","selected","List","component","aria-label","ListItem","button","aria-haspopup","aria-controls","event","currentTarget","ListItemText","secondary","textAlign","secondaryTypographyProps","keepMounted","open","Boolean","onClose","grow","flexGrow","menuButton","spymasterButton","marginTop","marginBottom","sectionDesktop","float","sectionMobile","list","fullList","anchor","drawerOpen","setDrawerOpen","toggleDrawer","type","renderDictionaryMenu","dictionaryOptions","newDictionary","onDictionaryChange","dictionarySelected","AppBar","Toolbar","IconButton","edge","Drawer","drawer","clsx","role","onKeyDown","spymasterClicked","gameId","gameIdChanged","Button","variant","teamConfigs","firstTeam","remaining","secondTeam","scoreboard","superagent","require","a","words","get","set","response","body","nouns","verbs","adjectives","movies","famousPeople","countries","sillyWords","shows","fictionalCharacters","foods","dictionaries","calcHashCode","str","split","reduce","b","charCodeAt","getWordsAtHashedIndexes","hashCode","wordList","wordListAtHashedIndexes","wordListCopy","Array","from","i","intFromBits","parseInt","intFromCircularBits","circularBitsLost","circularBitStr","j","concat","bitsAsInt","wordIndex","Math","abs","splice","getColorsAtHashedIndexes","teamAColor","teamBColor","colorList","teamAFirst","yellowCardColor","createColorList","colorListAtHashedIndexes","colorIndex","providedWordList","providedDictionaryName","dictionaryName","undefined","Error","startingWord","randomWords","colorA","blueCardColor","colorB","redCardColor","hashedWord","colors","dictionary","generateGameSetup","setShow","handleClose","Modal","show","shown","onHide","Header","closeButton","Title","Body","Footer","setDictionaryName","dictionaryWords","setDictionaryWords","setGameId","fill","setTiles","setSpymasterMode","loading","setLoading","setTeamConfigs","setCreateModalOpen","handleDictionaryChange","newDictionaryName","loadNewGame","decrementTeamCount","teamColor","newTeamConfigs","Object","assign","updateScores","tileIndex","incrementTeamCount","firstTeamColor","secondTeamColor","newGameSetup","newTiles","_","revealed","originalCountFirstTeam","filter","originalCountSecondTeam","originalCount","createGameConfig","then","gameScreen","game","gameHeader","newGameId","newSpymasterMode","handleSpymasterToggle","keys","gameBoard","createMuiTheme","main","text","default","Fragment","CssBaseline","ThemeProvider","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.16e7fd46.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './tile.module.css';\nimport styleDefinitions from '../../styles/globalStyles.json';\n\nconst Tile = props => {\n    const [colorShown, setColorShown] = useState(props.spymasterMode === true ? props.trueColor : styleDefinitions.neutralCardColor);\n\n    const handleTileClick = () => {\n        const newColor = getColorToDisplay();\n        setColorShown(newColor);\n        props.trackTileClicked(newColor);\n    };\n\n    const getColorToDisplay = () => {\n        let colorRotation = [styleDefinitions.neutralCardColor, props.trueColor];\n        if (props.spymasterMode === true && props.trueColor !== styleDefinitions.endgameCardColor) {\n          colorRotation.push(styleDefinitions.greenCardColor);\n        }\n        return colorRotation[(colorRotation.indexOf(colorShown) + 1) % colorRotation.length];\n    }\n\n    useEffect(() => {\n        const revealCard = () => setColorShown(props.trueColor);\n        const hideCard = () => setColorShown(styleDefinitions.neutralCardColor);    \n        props.spymasterMode === true ? revealCard() : hideCard();\n    }, [props.spymasterMode, props.trueColor]);\n\n    return(\n        <div className={styles.tileContainer}>\n            <div className={styles.tile} style={{backgroundColor: colorShown}} onClick={() => handleTileClick()}>\n                <div className={styles.word}>\n                    <span>{props.word}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Tile, (prevProps, newProps) => {\n    return prevProps.colorShown === newProps.colorShown && prevProps.word === newProps.word && prevProps.spymasterMode === newProps.spymasterMode\n});","import React, { useEffect } from 'react';\nimport Tile from '../tile';\nimport styles from './board.module.css';\n\nconst Board = props => {\n    console.log('Rendering board!');\n    \n    useEffect(() => {\n        console.log('inside mount for board');\n    }, [props.tiles]);\n\n    const renderTile = index => (\n        <Tile word={props.tiles[index].word} trueColor={props.tiles[index].trueColor} trackTileClicked={(colorShown) => props.tileClicked(index, colorShown)} spymasterMode={props.spymasterMode} />\n    )\n\n    let tileIndexCounter = 0;\n\n    return (\n        <div className={styles.board}>\n            <div className={styles.boardTiles}>\n                <div className={styles.tileRow}>\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                </div>\n                <div className={styles.tileRow}>\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                </div>\n                <div className={styles.tileRow}>\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                </div>\n                <div className={styles.tileRow}>\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                </div>\n                <div className={styles.tileRow}>\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                    { renderTile(tileIndexCounter++) }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Board, (prevProps, newProps) => {\n    return prevProps.tiles === newProps.tiles && prevProps.spymasterMode === newProps.spymasterMode;\n});","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './loadingInfo.module.css';\nimport styleDefinitions from '../../styles/globalStyles.json';\n\nconst LoadingInfo = props => {\n    return(\n        <div className={styles.loadingInfo}>\n            <h4 className={styles.introText}>{props.introText}</h4>\n            <h1 className={styles.headingText}>{props.headingText}</h1>\n            <CircularProgress id={styles.appLoadingSpinner} size={styleDefinitions.spinnerSize} />\n        </div>\n    )\n}\n\nexport default React.memo(LoadingInfo);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(0.3),\n        fontWeight: \"bold\"\n      },\n    }\n  }));\n\nexport function ScoreBoard(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Avatar style={{backgroundColor: props.colorTeamA}}>{props.tilesRemainingTeamA}</Avatar>\n            <Avatar style={{backgroundColor: props.colorTeamB}}>{props.tilesRemainingTeamB}</Avatar>\n        </div>\n    )\n}","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(2),\n        width: 'auto',\n      },\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(0)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '30ch',\n      },\n    }\n  }));\n  \nconst IdInput = props => {\n    const classes = useStyles();\n    return (\n        <div className={classes.search}>\n            <InputBase\n              placeholder={props.placeholder}\n              classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              onChange={(e) => {\n                  if (e.target.value === '' || /^[a-zA-Z]{1,20}$/.test(e.target.value)) {\n                      props.IdChanged(e.target.value.toLowerCase());\n                  };\n              }}\n            />\n        </div>\n    )\n}\n\nexport default React.memo(IdInput, (prevProps, newProps) => {\n  return prevProps.placeholder === newProps.placeholder\n});","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  buttonProps: {\n    color: theme.primary\n  },\n}));\n\n\nconst DropdownMenu = props => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(props.options.indexOf(props.selectedOption));\n\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClickMenuItem = (optionSelected, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n    props.onChange(optionSelected)\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const menuItems = props.options.map((name, index) => {\n    return (\n    <MenuItem \n      onClick={() => handleClickMenuItem(name, index)} \n      key={name}\n      disabled={index === selectedIndex}\n      selected={index === selectedIndex}\n    >\n      {name}\n    </MenuItem>\n    )\n  })\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"dictionary list\">\n      <ListItem\n        button\n        aria-haspopup=\"true\"\n        aria-controls=\"dictionary-menu-list\"\n        aria-label=\"words to play the game with\"\n        onClick={handleClickListItem}\n      >\n        <ListItemText primary=\"Game Mode\" secondary={props.selectedOption} style={{textAlign: \"center\"}} className={classes.buttonProps} secondaryTypographyProps={{ color: \"#fff\" }}/>\n      </ListItem>\n      </List>\n      <Menu\n        id=\"dictionary-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {menuItems}\n        <MenuItem \n          onClick={() => handleClickMenuItem(\"Create Your Own\", props.options.length)} \n          key=\"createYourOwn\"\n          disabled={props.options.length === selectedIndex}\n          selected={props.options.length === selectedIndex}\n        >\n          Create Your Own\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n\nexport default React.memo(DropdownMenu);","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\n\nimport { ScoreBoard } from '../scoreboard/scoreboard';\nimport IdInput from '../idInput';\nimport DropdownMenu from '../dropdownMenu/dropdownMenu';\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  spymasterButton: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n      float: 'left',\n      position: 'relative',\n      marginRight: theme.spacing(1)\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  }\n}));\n\nconst AppBarHeader = props => {\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const toggleDrawer = (anchor, open) => event => {\n    console.log('Drawer toggled');\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    };\n    console.log('Drawer toggled with open = ' + open);\n    setDrawerOpen(open);\n  };\n\n  const list = anchor => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem \n          button key=\"spymaster\" \n          onClick={(event) => {\n            props.spymasterClicked(event);\n            toggleDrawer(\"left\", false)(event);\n          }}\n          style={{textAlign: 'center'}}\n        >\n            <ListItemText primary=\"Spymaster\" />\n        </ListItem>\n        {renderDictionaryMenu()}\n      </List>\n    </div>\n  );\n\n  const renderSpymasterButton = () => (\n    <Button \n      onClick={props.spymasterClicked}\n      variant=\"outlined\"\n      color=\"inherit\"\n      className={classes.spymasterButton}\n    >\n        SpyMaster\n    </Button>\n  );\n\n  const renderDictionaryMenu = () => (\n    <DropdownMenu\n      options={props.dictionaryOptions}\n      onChange={(newDictionary) => props.onDictionaryChange(newDictionary)} \n      selectedOption={props.dictionarySelected} \n    />\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"sticky\" color=\"primary\">\n        <Toolbar>\n          <div className={classes.sectionMobile}>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n              >\n              <MenuIcon onClick={toggleDrawer(\"left\", true)}/>\n              <Drawer\n                anchor=\"left\"\n                open={drawerOpen}\n                onClose={toggleDrawer(\"left\", false)}\n                className={classes.drawer}\n              >\n                {list(\"left\")}\n              </Drawer>\n            </IconButton>\n            </div>\n            <IdInput placeholder={props.gameId} IdChanged={props.gameIdChanged}/>\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              {renderDictionaryMenu()}\n              {renderSpymasterButton()}\n            </div>\n            <ScoreBoard \n                colorTeamA={props.teamConfigs.firstTeam.color} \n                tilesRemainingTeamA={props.teamConfigs.firstTeam.remaining} \n                colorTeamB={props.teamConfigs.secondTeam.color} \n                tilesRemainingTeamB={props.teamConfigs.secondTeam.remaining} \n                className={classes.scoreboard}\n              />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default React.memo(AppBarHeader);","const superagent = require('superagent');\n\nexport async function getWords() {\n\n    let words = [];\n\n    const response = await superagent\n        .get(\"https://scpnmwczha.execute-api.us-east-1.amazonaws.com/dev/words\")\n        .set(\"Content-Type\", \"application/json\")\n        .set(\"Accept\", \"application/json\");\n\n    const {\n        nouns,\n        verbs,\n        adjectives\n    } = response.body\n    words = [...nouns, ...verbs, ...adjectives]\n    return words;\n};\n\nexport async function getMovies() {\n    const response = await superagent\n        .get(\"https://scpnmwczha.execute-api.us-east-1.amazonaws.com/dev/movies\")\n        .set(\"Content-Type\", \"application/json\")\n        .set(\"Accept\", \"application/json\");\n\n    return response.body.movies;\n};\n\nexport async function getFamousPeople() {\n    const response = await superagent\n        .get(\"https://scpnmwczha.execute-api.us-east-1.amazonaws.com/dev/famousPeople\")\n        .set(\"Content-Type\", \"application/json\")\n        .set(\"Accept\", \"application/json\");\n\n    return response.body.famousPeople;\n};\n\nexport async function getCountries() {\n    const response = await superagent\n        .get(\"https://scpnmwczha.execute-api.us-east-1.amazonaws.com/dev/countries\")\n        .set(\"Content-Type\", \"application/json\")\n        .set(\"Accept\", \"application/json\");\n\n    return response.body.countries;\n};\n\nexport async function getGoofyWords() {\n    const response = await superagent\n        .get(\"https://scpnmwczha.execute-api.us-east-1.amazonaws.com/dev/sillyWords\")\n        .set(\"Content-Type\", \"application/json\")\n        .set(\"Accept\", \"application/json\");\n\n    return response.body.sillyWords;\n};\n\nexport async function getShows() {\n    const response = await superagent\n        .get(\"https://scpnmwczha.execute-api.us-east-1.amazonaws.com/dev/shows\")\n        .set(\"Content-Type\", \"application/json\")\n        .set(\"Accept\", \"application/json\");\n\n    return response.body.shows;\n};\n\nexport async function getFictionalCharacters() {\n    const response = await superagent\n        .get(\"https://scpnmwczha.execute-api.us-east-1.amazonaws.com/dev/fictionalCharacters\")\n        .set(\"Content-Type\", \"application/json\")\n        .set(\"Accept\", \"application/json\");\n\n    return response.body.fictionalCharacters;\n};\n\nexport async function getFoodNames() {\n    const response = await superagent\n        .get(\"https://scpnmwczha.execute-api.us-east-1.amazonaws.com/dev/foods\")\n        .set(\"Content-Type\", \"application/json\")\n        .set(\"Accept\", \"application/json\");\n\n    return response.body.foods;\n};\n\nexport async function getBrownWords() {\n    const brownWords = await superagent\n        .get(\"https://scpnmwczha.execute-api.us-east-1.amazonaws.com/dev/brownWords\")\n        .set(\"Content-Type\", \"application/json\")\n        .set(\"Accept\", \"application/json\");\n\n    return brownWords;\n};","import {\n    getWords,\n    getMovies,\n    getFamousPeople,\n    getCountries,\n    getGoofyWords,\n    getShows,\n    getFictionalCharacters,\n    getFoodNames\n} from './wordsClient';\nimport randomWords from 'random-words'\nimport styleDefinitions from '../styles/globalStyles.json';\n\nexport const dictionaries = {\n    'Nouns/Adjectives/Verbs': getWords,\n    'Blockbuster Movies': getMovies,\n    'Famous People': getFamousPeople,\n    'Countries': getCountries,\n    'Silly Words': getGoofyWords,\n    'Popular Shows': getShows,\n    'Fictional Characters': getFictionalCharacters,\n    'Foods': getFoodNames\n};\n\nexport function calcHashCode(str) {\n    return str.split(\"\").reduce((a, b) => {\n        a = ((a << 5) - a) + b.charCodeAt(0);\n        return a & a\n    }, 0);\n}\n\nexport function getWordsAtHashedIndexes(hashCode, wordList) {\n    const wordListAtHashedIndexes = [];\n    const fourteenBitStr = '11111111111111'\n    const bitsInInt = 32;\n    const wordListCopy = Array.from(wordList);\n\n    for (let i = 0; i < 25; i++) {\n        const intFromBits = parseInt(fourteenBitStr, 2) << i;\n        let intFromCircularBits = 0;\n        if (bitsInInt < fourteenBitStr.length + i) {\n            const circularBitsLost = fourteenBitStr.length + i - bitsInInt;\n            let circularBitStr = '';\n            for (let j = 0; j < circularBitsLost; j++) {\n                circularBitStr = circularBitStr.concat('1');\n            }\n            intFromCircularBits = parseInt(circularBitStr, 2);\n        }\n        const bitsAsInt = intFromBits + intFromCircularBits;\n        const wordIndex = Math.abs(hashCode & bitsAsInt) % wordListCopy.length;\n        wordListAtHashedIndexes.push(wordListCopy[wordIndex]);\n        wordListCopy.splice(wordIndex, 1);\n    }\n\n    return wordListAtHashedIndexes;\n}\n\nexport function getColorsAtHashedIndexes(hashCode, teamAColor, teamBColor) {\n    const colorList = createColorList(hashCode % 2 === 1, teamAColor, teamBColor);\n    const colorListAtHashedIndexes = [];\n    const fiveBitStr = '11111'\n\n    for (let i = 0; i < 25; i++) {\n        const intFromBits = parseInt(fiveBitStr, 2) << i;\n        const colorIndex = Math.abs(hashCode & intFromBits) % colorList.length;\n        colorListAtHashedIndexes.push(colorList[colorIndex])\n        colorList.splice(colorIndex, 1);\n    }\n\n    return colorListAtHashedIndexes\n}\n\nasync function generateGameSetup(gameId, providedWordList, teamAColor, teamBColor, providedDictionaryName) {\n    let wordList = providedWordList;\n    let dictionaryName = providedDictionaryName;\n\n    if (wordList === undefined || wordList === null) {\n        if (dictionaryName === undefined || dictionaryName == null || dictionaryName === '') {\n            dictionaryName = 'Nouns/Adjectives/Verbs';\n        }\n        if (dictionaries[dictionaryName] === undefined) {\n            throw new Error('The given dictionary name is invalid');\n        }\n\n        console.log(`Dictionary name give: ${dictionaryName}`);\n        wordList = await dictionaries[dictionaryName]();\n        console.log('Word list after getting: ' + wordList);\n    }\n\n    let startingWord = gameId;\n    if (startingWord === undefined || startingWord === null || startingWord === '') {\n        startingWord = randomWords();\n    }\n    const colorA = (teamAColor === undefined || teamAColor === null) ? styleDefinitions.blueCardColor : teamAColor;\n    const colorB = (teamBColor === undefined || teamBColor === null) ? styleDefinitions.redCardColor : teamBColor;\n    const hashedWord = calcHashCode(startingWord);\n    return {\n        gameId: startingWord,\n        words: getWordsAtHashedIndexes(hashedWord, wordList),\n        colors: getColorsAtHashedIndexes(hashedWord, colorA, colorB),\n        dictionary: wordList,\n        colorA,\n        colorB,\n        dictionaryName\n    };\n}\n\nexport function createColorList(teamAFirst, teamAColor, teamBColor) {\n    let colorList = [styleDefinitions.endgameCardColor];\n    for (let i = 0; i < 7; i++) {\n        colorList.push(styleDefinitions.yellowCardColor);\n    }\n    for (let i = 0; i < 8; i++) {\n        colorList.push(teamAColor);\n        colorList.push(teamBColor);\n    }\n    colorList.push(teamAFirst ? teamAColor : teamBColor);\n    return colorList;\n}\n\nexport default generateGameSetup;","import React, { useState, useEffect } from 'react'\nimport Modal from 'react-bootstrap/Modal';\nimport styles from './game.module.css';\nimport Board from '../board';\nimport LoadingInfo from '../loadingInfo';\nimport AppBarHeader from '../appBar';\nimport styleDefinitions from '../../styles/globalStyles.json';\nimport generateGameSetup, { dictionaries } from '../../services/gameLoader';\nimport ListModal from '../listModal';\n\nconst Game = props => {\n    console.log('Rendering game!');\n\n    const [dictionaryName, setDictionaryName] = useState(null);\n    const [dictionaryWords, setDictionaryWords] = useState(null);\n    const [gameId, setGameId] = useState(null);\n    const [tiles, setTiles] = useState(Array(25).fill(null));\n    const [spymasterMode, setSpymasterMode] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [teamConfigs, setTeamConfigs] = useState(null);\n    const [createModalOpen, setCreateModalOpen] = useState(false);\n\n    const handleSpymasterToggle = () => {\n        const newTeamConfigs = Object.assign({}, teamConfigs);\n        let newSpymasterMode = spymasterMode;\n        newTeamConfigs.firstTeam.remaining = newTeamConfigs.firstTeam.originalCount;\n        newTeamConfigs.secondTeam.remaining = newTeamConfigs.secondTeam.originalCount;\n        newSpymasterMode = !newSpymasterMode;\n        setTeamConfigs(newTeamConfigs);\n        setSpymasterMode(newSpymasterMode);\n    };\n\n    const handleDictionaryChange = async (newDictionaryName) => {\n        if (newDictionaryName === \"Create Your Own\") {\n            setCreateModalOpen(true);\n            return;\n        }\n        if (newDictionaryName === dictionaryName) {\n            return;\n        }\n        setLoading(true);\n        await loadNewGame(undefined, undefined, teamConfigs.firstTeam.color, teamConfigs.secondTeam.color, newDictionaryName);\n        setLoading(false);\n    }\n\n    const handleModalClose = data => {\n        console.log('Closed!' + data);\n    }\n\n    const incrementTeamCount = teamColor => {\n        const newTeamConfigs = Object.assign({}, teamConfigs);\n        if (teamColor === newTeamConfigs.firstTeam.color) {\n            newTeamConfigs.firstTeam.remaining++;\n        } else if (teamColor === newTeamConfigs.secondTeam.color) {\n            newTeamConfigs.secondTeam.remaining++;\n        }\n        setTeamConfigs(newTeamConfigs);\n    }\n\n    const decrementTeamCount = teamColor => {\n        const newTeamConfigs = Object.assign({}, teamConfigs);\n        if (teamColor === newTeamConfigs.firstTeam.color) {\n            newTeamConfigs.firstTeam.remaining--;\n        } else if (teamColor === newTeamConfigs.secondTeam.color) {\n            newTeamConfigs.secondTeam.remaining--;\n        }\n        setTeamConfigs(newTeamConfigs);\n    }\n\n    const updateScores = (tileIndex, colorShown) => {\n        if (colorShown === styleDefinitions.neutralCardColor) {\n            incrementTeamCount(tiles[tileIndex].trueColor);\n        } else {\n            if (spymasterMode === true) {\n                if (colorShown === styleDefinitions.greenCardColor) {\n                    decrementTeamCount(tiles[tileIndex].trueColor);\n                }\n            } else {\n                decrementTeamCount(tiles[tileIndex].trueColor);\n            }\n        }\n    };\n\n    const loadNewGame = async (gameId, dictionaryWords, firstTeamColor, secondTeamColor, dictionaryName) => {\n        try {\n            const newGameSetup = await generateGameSetup(gameId, dictionaryWords, firstTeamColor, secondTeamColor, dictionaryName);\n            const newTiles = Array(25).fill({}).map((_, index) => {\n                return {\n                    word: newGameSetup.words[index],\n                    trueColor: newGameSetup.colors[index],\n                    revealed: false\n                };\n            });\n            const originalCountFirstTeam = newGameSetup.colors.filter(color => color === newGameSetup.colorA).length;\n            const originalCountSecondTeam = newGameSetup.colors.filter(color => color === newGameSetup.colorB).length;\n            const newTeamConfigs = {\n                firstTeam: {\n                    color: newGameSetup.colorA,\n                    originalCount: originalCountFirstTeam,\n                    remaining: originalCountFirstTeam\n                },\n                secondTeam: {\n                    color: newGameSetup.colorB,\n                    originalCount: originalCountSecondTeam,\n                    remaining: originalCountSecondTeam\n                }\n            };\n            setGameId(newGameSetup.gameId);\n            setTiles(newTiles);\n            setTeamConfigs(newTeamConfigs);\n            setDictionaryWords(newGameSetup.dictionary);\n            if (newGameSetup.dictionaryName !== null && newGameSetup.dictionaryName !== undefined && newGameSetup.dictionaryName !== '') {\n                setDictionaryName(newGameSetup.dictionaryName);\n            }\n        } catch (err) {\n            console.log('An error was received while loading the new game', err);\n        }\n    }\n\n    useEffect(() => {\n        const createGameConfig = async () => await loadNewGame();\n        createGameConfig().then(() => {\n            setLoading(false);\n        });\n    }, []);\n\n    const renderLoadingSpinner = () => (\n        <LoadingInfo introText=\"Loading Game\" headingText=\"Codewords\"/>\n    );\n    \n    const renderGame = () => (\n        <div className={styles.game}>\n            <div className={styles.gameHeader}>\n                <AppBarHeader \n                teamConfigs={teamConfigs}\n                gameId={gameId} \n                gameIdChanged={(newGameId) => loadNewGame(newGameId, dictionaryWords)} \n                spymasterClicked={() => handleSpymasterToggle()} \n                dictionaryOptions={Object.keys(dictionaries)} \n                onDictionaryChange={async (newDictionaryName) => await handleDictionaryChange(newDictionaryName)} \n                dictionarySelected={dictionaryName}\n                />\n            </div>\n            <div className={styles.gameBoard}>\n                <Board\n                tiles={tiles}\n                tileClicked={(tileIndex, colorShown) => updateScores(tileIndex, colorShown)}\n                spymasterMode={spymasterMode}\n                />\n            </div>\n        </div>\n    );\n\n    return (\n        <div className={styles.gameScreen}>\n            {loading === true\n            ? renderLoadingSpinner()\n            : renderGame()}\n        </div>\n    )\n};\n\nexport default React.memo(Game);","import React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nconst ListModal = (props) => {\n    const [show, setShow] = useState(false);\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n  \n    return (\n      <>\n        <Modal show={props.shown} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\nexport default React.memo(ListModal);","import React from 'react';\nimport './App.css';\nimport Game from './components/game';\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#2b518a\",\n    },\n    text: {\n      default: \"#fff\"\n    }\n  },\n});\n\nconst App = props => {\n    return (\n      <React.Fragment key={\"game\"}>\n        <CssBaseline />\n        <ThemeProvider theme={theme}>\n          <Game />\n        </ThemeProvider>\n      </React.Fragment>\n    )\n}\n\nexport default React.memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n            headers: {\n                'Service-Worker': 'script'\n            },\n        })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"board_board__PF3JZ\",\"boardHeader\":\"board_boardHeader__f63no\",\"boardTiles\":\"board_boardTiles__3JFxb\",\"tileRow\":\"board_tileRow__1yOWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingInfo\":\"loadingInfo_loadingInfo__2fRMN\",\"introText\":\"loadingInfo_introText__3y4LZ\",\"headingText\":\"loadingInfo_headingText__1QVV1\",\"appLoadingSpinner\":\"loadingInfo_appLoadingSpinner__3X0bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tileContainer\":\"tile_tileContainer__32zlQ\",\"tile\":\"tile_tile__2O8iQ\",\"word\":\"tile_word__2ydKx\"};"],"sourceRoot":""}